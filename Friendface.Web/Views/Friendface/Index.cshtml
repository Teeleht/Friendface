@model Friendface.Web.Models.IndexModel

@{
    Layout = "_Layout";
}

<div class="container">
    <h2>@Model.User.Username</h2>
    <hr />

    <div class="row">
        <div class="col-md-8">

            <p>@Model.User.Email</p>
            <p>@Model.User.Birthday.ToString("dd-MM-yyyy")</p>
            <p>@Model.User.Address</p>
            <p>@Model.User.Gender</p>

            <a class="btn btn-secondary btn-sm ml-auto" href="@Url.Action("CreatePost")">New post</a>
            @foreach (var post in Model.User.Posts)
            {
            <div class="border post">
                <p><b>@post.Title</b></p>
                <p>@post.ReleaseDate</p>
                <p>@post.Content</p>
                @using (Html.BeginForm("DeletePost", "Friendface", new { postId = post.Id }, FormMethod.Post))
                {
                    <button type="submit" class="btn btn-secondary btn-sm">Delete</button>
                }
            </div>
            }
        </div>
        <div class="col-md-4">

            <ul class="list-group list-group-flush">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <h4>My friends</h4>
                    <span class="badge badge-pill orange">@Model.Friendships.Count()</span>
                </li>

                @foreach (var friendship in Model.Friendships)
                {
                    <li class="list-group-item">
                        <a class="orange-text" href="@Url.Action("Details", new { userId = friendship.UserB.Id })">@friendship.UserB.Username</a>
                    </li>
                }
            </ul>

            <a class="nav-link orange-text" href="@Url.Action("AddedFriends")">All friendships</a>

            <div class="row bottom-row border">
                <!-- border h-100 d-inline-block" style="min-width: 300px; max-height: 100px -->
                <div>
                    <ul class="anyClass" id="messagesList"></ul>
                </div>

                <div class="input-group">
                    <input id="messageInput" />
                    <div class="input-group-append">
                        <button id="sendButton" class="btn btn-secondary btn-sm">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", (user, message, time) => {
        const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        const data = time + " " + user + ": ";
        const encodedMsg = msg;

        const li_data = document.createElement("li");
        li_data.className = "font-weight-bold";
        li_data.textContent = data;

        const li_msg = document.createElement("li");
        li_msg.textContent = msg;
        document.getElementById("messagesList").appendChild(li_data);
        document.getElementById("messagesList").appendChild(li_msg);

        $('#messageInput').val('').focus();
    });

    connection.start().catch(err => console.error(err.toString()));

    function OnEvent() {
        const message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", message).catch(err => console.error(err.toString()));
    }

    document.getElementById("sendButton").addEventListener("click", event => {       
        event.preventDefault();
        OnEvent();
    });

    $(document).keypress(function (event) {
        if (event.which == 13) {
            event.preventDefault();
            OnEvent();
        }
    });


</script>